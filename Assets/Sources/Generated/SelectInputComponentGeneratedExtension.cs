//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public SelectInputComponent selectInput { get { return (SelectInputComponent)GetComponent(InputComponentIds.SelectInput); } }
        public bool hasSelectInput { get { return HasComponent(InputComponentIds.SelectInput); } }

        public Entity AddSelectInput(UnityEngine.GameObject newView, Entitas.Entity newEntity) {
            var component = CreateComponent<SelectInputComponent>(InputComponentIds.SelectInput);
            component.view = newView;
            component.entity = newEntity;
            return AddComponent(InputComponentIds.SelectInput, component);
        }

        public Entity ReplaceSelectInput(UnityEngine.GameObject newView, Entitas.Entity newEntity) {
            var component = CreateComponent<SelectInputComponent>(InputComponentIds.SelectInput);
            component.view = newView;
            component.entity = newEntity;
            ReplaceComponent(InputComponentIds.SelectInput, component);
            return this;
        }

        public Entity RemoveSelectInput() {
            return RemoveComponent(InputComponentIds.SelectInput);
        }
    }

    public partial class Pool {

        public Entity selectInputEntity { get { return GetGroup(InputMatcher.SelectInput).GetSingleEntity(); } }
        public SelectInputComponent selectInput { get { return selectInputEntity.selectInput; } }
        public bool hasSelectInput { get { return selectInputEntity != null; } }

        public Entity SetSelectInput(UnityEngine.GameObject newView, Entitas.Entity newEntity) {
            if(hasSelectInput) {
                throw new EntitasException("Could not set selectInput!\n" + this + " already has an entity with SelectInputComponent!",
                    "You should check if the pool already has a selectInputEntity before setting it or use pool.ReplaceSelectInput().");
            }
            var entity = CreateEntity();
            entity.AddSelectInput(newView, newEntity);
            return entity;
        }

        public Entity ReplaceSelectInput(UnityEngine.GameObject newView, Entitas.Entity newEntity) {
            var entity = selectInputEntity;
            if(entity == null) {
                entity = SetSelectInput(newView, newEntity);
            } else {
                entity.ReplaceSelectInput(newView, newEntity);
            }

            return entity;
        }

        public void RemoveSelectInput() {
            DestroyEntity(selectInputEntity);
        }
    }
}

    public partial class InputMatcher {

        static IMatcher _matcherSelectInput;

        public static IMatcher SelectInput {
            get {
                if(_matcherSelectInput == null) {
                    var matcher = (Matcher)Matcher.AllOf(InputComponentIds.SelectInput);
                    matcher.componentNames = InputComponentIds.componentNames;
                    _matcherSelectInput = matcher;
                }

                return _matcherSelectInput;
            }
        }
    }
