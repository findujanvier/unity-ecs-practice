//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public CurrentExpComponent currentExp { get { return (CurrentExpComponent)GetComponent(CoreComponentIds.CurrentExp); } }
        public bool hasCurrentExp { get { return HasComponent(CoreComponentIds.CurrentExp); } }

        public Entity AddCurrentExp(int newValue) {
            var component = CreateComponent<CurrentExpComponent>(CoreComponentIds.CurrentExp);
            component.value = newValue;
            return AddComponent(CoreComponentIds.CurrentExp, component);
        }

        public Entity ReplaceCurrentExp(int newValue) {
            var component = CreateComponent<CurrentExpComponent>(CoreComponentIds.CurrentExp);
            component.value = newValue;
            ReplaceComponent(CoreComponentIds.CurrentExp, component);
            return this;
        }

        public Entity RemoveCurrentExp() {
            return RemoveComponent(CoreComponentIds.CurrentExp);
        }
    }
}

    public partial class CoreMatcher {

        static IMatcher _matcherCurrentExp;

        public static IMatcher CurrentExp {
            get {
                if(_matcherCurrentExp == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.CurrentExp);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherCurrentExp = matcher;
                }

                return _matcherCurrentExp;
            }
        }
    }
