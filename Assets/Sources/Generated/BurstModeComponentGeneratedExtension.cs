//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        static readonly BurstModeComponent burstModeComponent = new BurstModeComponent();

        public bool isBurstMode {
            get { return HasComponent(InputComponentIds.BurstMode); }
            set {
                if(value != isBurstMode) {
                    if(value) {
                        AddComponent(InputComponentIds.BurstMode, burstModeComponent);
                    } else {
                        RemoveComponent(InputComponentIds.BurstMode);
                    }
                }
            }
        }

        public Entity IsBurstMode(bool value) {
            isBurstMode = value;
            return this;
        }
    }

    public partial class Pool {

        public Entity burstModeEntity { get { return GetGroup(InputMatcher.BurstMode).GetSingleEntity(); } }

        public bool isBurstMode {
            get { return burstModeEntity != null; }
            set {
                var entity = burstModeEntity;
                if(value != (entity != null)) {
                    if(value) {
                        CreateEntity().isBurstMode = true;
                    } else {
                        DestroyEntity(entity);
                    }
                }
            }
        }
    }
}

    public partial class InputMatcher {

        static IMatcher _matcherBurstMode;

        public static IMatcher BurstMode {
            get {
                if(_matcherBurstMode == null) {
                    var matcher = (Matcher)Matcher.AllOf(InputComponentIds.BurstMode);
                    matcher.componentNames = InputComponentIds.componentNames;
                    _matcherBurstMode = matcher;
                }

                return _matcherBurstMode;
            }
        }
    }
