//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {

    public partial class Entity {

        static readonly PauseComponent pauseComponent = new PauseComponent();

        public bool isPause {
            get { return HasComponent(ComponentIds.Pause); }
            set {
                if(value != isPause) {
                    if(value) {
                        AddComponent(ComponentIds.Pause, pauseComponent);
                    } else {
                        RemoveComponent(ComponentIds.Pause);
                    }
                }
            }
        }

        public Entity IsPause(bool value) {
            isPause = value;
            return this;
        }
    }

    public partial class Pool {

        public Entity pauseEntity { get { return GetGroup(Matcher.Pause).GetSingleEntity(); } }

        public bool isPause {
            get { return pauseEntity != null; }
            set {
                var entity = pauseEntity;
                if(value != (entity != null)) {
                    if(value) {
                        CreateEntity().isPause = true;
                    } else {
                        DestroyEntity(entity);
                    }
                }
            }
        }
    }

    public partial class Matcher {

        static IMatcher _matcherPause;

        public static IMatcher Pause {
            get {
                if(_matcherPause == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.Pause);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherPause = matcher;
                }

                return _matcherPause;
            }
        }
    }
}
